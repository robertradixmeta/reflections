How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By outlining the changes between lines and placing them next to each other, a user 
    can easily see what changes were made to a file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having access to a file's entire history, a programmer can see how often
    bugs were introduced. This could allow a programmer to evaluate how he is testing
    his code to determine if the bugs could have been caught before changes were 
    committed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    If a VCS system automatically commits changes to a file, it my commit while a 
    programmer is in the middle of typing. 
    When the programmer chooses when to commit, the changes committed can already
    tested and ready to be committed.
    
    Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git allow for several files to be checked in in one commit since an application or
    program usually consists of several files. Checking in multiple files at once
    makes it easier to ensure that all of the changed files can be tested as part
    of the application that are associated with.

How can you use the commands git log and git diff to view the history of files?

    The git log lists all of the changes that were made to files in the repository.
    Each commit has a commit id letting a programming see the difference
    between two commits.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
